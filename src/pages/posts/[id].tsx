import type { GetStaticPaths, GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import { ParsedUrlQuery } from 'querystring'

import Navigation from '@/components/Navigation'
import { fetcher } from '@/lib/fetcher'
import styles from '@/styles/Home.module.css'

type Props = {
  fallbackData: TestApiResponseType
}

type Params = ParsedUrlQuery & {
  id: string
}

const Post: NextPage<Props> = ({ fallbackData }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Navigation />
        <h1 className={styles.title}>{fallbackData.title}</h1>
        <p>{fallbackData.content}</p>
      </main>

      <footer className={styles.footer} />
    </div>
  )
}

export const getStaticProps: GetStaticProps = async (context) => {
  const API_URL = process.env.NEXT_PUBLIC_API_URL_ROOT
  if (typeof API_URL === 'undefined') {
    return {
      props: {
        fallbackData: undefined,
      },
    }
  }

  const data = (await fetcher(API_URL)).find(
    ({ id }) => id === context.params?.id,
  )
  return {
    props: {
      fallbackData: data,
    },
  }
}

export const getStaticPaths: GetStaticPaths<Params> = async () => {
  const paths = (
    await fetcher(process.env.NEXT_PUBLIC_API_URL_ROOT as string)
  ).map(({ id }) => {
    return {
      params: {
        id,
      },
    }
  })

  return {
    paths,
    fallback: false,
  }
}

export default Post
