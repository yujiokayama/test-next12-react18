import type { NextPage, GetStaticProps } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import styles from '@/styles/Home.module.css';
import { fetcher } from '@/lib/fetcher';
import { usePostSWR } from '@/hooks/usePostSWR';
import Link from 'next/link';

type Props = {
  fallbackData: TestApiResponseType[];
};

const Post: NextPage<Props> = ({ fallbackData }) => {
  /**
   * @description useSWR のカスタムフック
   * getStaticProps からの fallbackDataを初期値に持つ。
   * クライアント側でのデータフェッチを行う。
   */
  const { data } = usePostSWR(fallbackData);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <ul>
          {data?.map((item) => (
            <li key={item.id}>
              <Link href={`/posts/${item.id}`}>{item.title}</Link>
            </li>
          ))}
        </ul>
      </main>

      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export const getStaticProps: GetStaticProps = async () => {
  if (typeof process.env.API_URL_ROOT === 'undefined') {
    return {
      props: {
        fallbackData: undefined,
      },
    };
  }

  const data = await fetcher(process.env.API_URL_ROOT);
  return {
    props: {
      fallbackData: data,
    },
  };
};

export default Post;
