import type { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import Link from 'next/link'

import Navigation from '@/components/Navigation'
import { usePostSWR } from '@/hooks/usePostSWR'
import { fetcher } from '@/lib/apiRequest'
import styles from '@/styles/Home.module.css'

type Props = {
  fallbackData: TestApiResponseType[]
}

const Sg: NextPage<Props> = ({ fallbackData }) => {
  /**
   * @description useSWR のカスタムフック
   * getStaticProps からの fallbackDataを初期値に持つ。
   * クライアント側でのデータフェッチを行う。
   */
  const { data } = usePostSWR(fallbackData)

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Navigation />
        <h1 className={styles.title}>SG</h1>
        <ul>
          {data?.map((item) => (
            <li key={item.id}>
              <Link href={`/posts/${item.id}`}>{item.title}</Link>
            </li>
          ))}
        </ul>
      </main>

      <footer className={styles.footer} />
    </div>
  )
}

export const getStaticProps: GetStaticProps = async () => {
  const API_URL_ROOT = process.env.NEXT_PUBLIC_API_URL_ROOT
  if (typeof API_URL_ROOT === 'undefined') {
    return {
      props: {
        fallbackData: undefined,
      },
    }
  }

  const data = await fetcher(API_URL_ROOT)
  return {
    props: {
      fallbackData: data,
    },
  }
}

export default Sg
